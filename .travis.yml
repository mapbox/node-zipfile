language: cpp

addons:
  apt:
    sources:
     - ubuntu-toolchain-r-test
     - llvm-toolchain-precise-3.6
    packages:
     - clang-3.6

matrix:
  include:
     # Coverage: Disabled pending migration to Codecov
     #- os: osx
       #compiler: clang
       #env: NODE_VERSION="4" COVERAGE=true # node abi 46
     # Linux
     - os: linux
       compiler: clang
       env: NODE_VERSION="12" # node abi 72
     - os: linux
       compiler: clang
       env: NODE_VERSION="10" # node abi 64
     - os: linux
       compiler: clang
       env: NODE_VERSION="8" # node abi 57
     - os: linux
       compiler: clang
       env: NODE_VERSION="6" # node abi 48
     # OS X
     - os: osx
       compiler: clang
       env: NODE_VERSION="12" # node abi 72
     - os: osx
       compiler: clang
       env: NODE_VERSION="10" # node abi 64
     - os: osx
       compiler: clang
       env: NODE_VERSION="8" # node abi 57
     - os: osx
       compiler: clang
       env: NODE_VERSION="6" # node abi 47

env:
  global:
   - JOBS: "8"

before_install:
 - scripts/validate_tag.sh
 - export COVERAGE=${COVERAGE:-false}
 - if [[ $(uname -s) == 'Linux' ]]; then
     export CXX="clang++-3.6";
     export CC="clang-3.6";
     export PYTHONPATH=$(pwd)/mason_packages/.link/lib/python2.7/site-packages;
   else
     export PYTHONPATH=$(pwd)/mason_packages/.link/lib/python/site-packages;
   fi;
 - source ./scripts/install_node.sh ${NODE_VERSION}
 - export PATH=./node_modules/.bin/:$PATH

install:
 - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
 - if [[ ${COVERAGE} == true ]]; then
     if [[ $(uname -s) == 'Linux' ]]; then
       PYTHONUSERBASE=$(pwd)/mason_packages/.link pip install --user cpp-coveralls;
     else
       PYTHONUSERBASE=$(pwd)/mason_packages/.link easy_install --user cpp-coveralls;
     fi;
     export CXXFLAGS="--coverage";
     export LDFLAGS="--coverage";
     npm install --build-from-source --clang=1 --debug;
   else
     npm install --build-from-source --clang=1;
   fi
 - node-pre-gyp package testpackage
 - if [[ $(uname -s) == 'Linux' ]]; then
     ldd ./lib/*/*/*node;
   else
     otool -L ./lib/*/*/*node;
   fi

before_script:
 - npm test
 - if [[ ${CXX} =~ "clang" ]] && [[ ${COVERAGE} == false ]]; then
      if [[ ${COMMIT_MESSAGE} =~ "[publish binary]" ]]; then
        node-pre-gyp publish;
      elif [[ ${COMMIT_MESSAGE} =~ "[republish binary]" ]]; then
        node-pre-gyp unpublish publish;
      fi
   fi

script:
 - if [[ ${COVERAGE} == true ]]; then ./mason_packages/.link/bin/cpp-coveralls --exclude node_modules --exclude tests --build-root build --gcov-options '\-lp' --exclude tools --exclude docs --exclude sdk --exclude build/Release/obj/gen --exclude src/node_zipfile.hpp --exclude deps > /dev/null; fi;
